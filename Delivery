--// Box Delivery Farm \\--

local V = 0

for _, model in ipairs(game.workspace.Map.NPCs:GetChildren()) do
    if model.Name == "BoxDeliveryAccept" then
        V = V + 1
        model.Name = "BoxDeliveryAccept" .. V
    end
end

local VPosition = {}
local Collider = {}
local PF = {}
local TPT = false

local function ColliderS()
    local Character = game.Players.LocalPlayer.Character
    if Character then
        local Z = {"Head", "Left Arm", "Right Arm", "Left Leg", "Right Leg", "Torso", "HumanoidRootPart"}
        for _, X in ipairs(Z) do
            local V = Character:FindFirstChild(X)
            if V and V:IsA("BasePart") and Collider[V] == nil then
                Collider[V] = V.CanCollide
            end
        end
    end
end

local function CLCollide()
    local Character = game.Players.LocalPlayer.Character
    if Character then
        local Z = {"Head", "Left Arm", "Right Arm", "Left Leg", "Right Leg", "Torso", "HumanoidRootPart"}
        for _, X in ipairs(Z) do
            local V = Character:FindFirstChild(X)
            if V and V:IsA("BasePart") then
                V.CanCollide = false
            end
        end
    end
end

local function RCollide()
    for V, CLV in pairs(Collider) do
        if V and V:IsA("BasePart") then
            V.CanCollide = CLV
        end
    end
    Collider = {}
end

local function Message()
    local Player = game.Players.LocalPlayer
    local MessagesFrame = Player.PlayerGui:FindFirstChild("RespawnableGui") and Player.PlayerGui.RespawnableGui:FindFirstChild("GameGui") and Player.PlayerGui.RespawnableGui.GameGui:FindFirstChild("MessagesFrame")

    if MessagesFrame then
        for _, child in ipairs(MessagesFrame:GetChildren()) do
            if child:IsA("TextLabel") then
                child:Destroy()
            end
        end
    end
end

local function TP()
    local Player = game.Players.LocalPlayer
    local Character = game.Workspace.Live:FindFirstChild(Player.Name)

    if Incognito then
        CLCollide()
    end

    if Character then
        local DeliverTarget = Character:FindFirstChild("DeliverTarget")
        local function TeleportTo(Target)
            local THRP = Target:FindFirstChild("HumanoidRootPart")
            local PlayerHRP = Character:FindFirstChild("HumanoidRootPart")
            if THRP and PlayerHRP then
                local X = (PlayerHRP.Position - THRP.Position).Magnitude
                if X > 15 then
                    Character.HumanoidRootPart.CFrame = THRP.CFrame * CFrame.new(0, 0, -5)
                end
                if not Prompt then
                    game.Workspace.CurrentCamera.CFrame = CFrame.new(PlayerHRP.Position + Vector3.new(0, 3, 5), Target.Head.Position)
                end
                if Prompt and (DeliverTarget and game.Workspace.Map.NPCs:FindFirstChild(tostring(DeliverTarget.Value)) == Target or Target.Name == "BoxDelivery") then
                    local ProximityPrompt = THRP:FindFirstChild("PromptAttachment") and THRP.PromptAttachment:FindFirstChild("ProximityPrompt")
                    if ProximityPrompt then
                        fireproximityprompt(ProximityPrompt)
                        Message()
                    end
                elseif not Prompt and not OK then
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.E, false, game)
                    OK = true
                    wait(0.5)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.E, false, game)
                    OK = false
                    wait(0.5)
                end
            end
        end

        local function TeleportToBoxDelivery()
            local BoxDelivery = game.Workspace.Map.NPCs:FindFirstChild("BoxDelivery")
            if BoxDelivery then
                TeleportTo(BoxDelivery)
            end
        end

        local TaskFrame = Player.PlayerGui.RespawnableGui.JobGui.TaskFrame
        if TaskFrame.Visible then
            if DeliverTarget and DeliverTarget.Value then
                local TargetX = game.Workspace.Map.NPCs:FindFirstChild(tostring(DeliverTarget.Value))
                if TargetX then
                    TeleportTo(TargetX)
                end
            else
                TeleportToBoxDelivery()
            end
        else
            TeleportToBoxDelivery()
        end

        local BoxDelivery = game.Workspace.Map.NPCs:FindFirstChild("BoxDelivery")
        if BoxDelivery and BoxDelivery:FindFirstChild("HumanoidRootPart") then
            local BoxHRP = BoxDelivery.HumanoidRootPart
            local ProximityPrompt = BoxHRP:FindFirstChild("PromptAttachment") and BoxHRP.PromptAttachment:FindFirstChild("ProximityPrompt")
            if ProximityPrompt then
                local Distance = (Character.HumanoidRootPart.Position - BoxHRP.Position).Magnitude
                ProximityPrompt.Enabled = Distance <= 15
            end
        end
    end
end

local function From()
    if Incognito then
        local NPCNames = {"BoxDelivery", "BoxDeliveryAccept1", "BoxDeliveryAccept2", "BoxDeliveryAccept3"}
        for _, VNPC in ipairs(NPCNames) do
            local NPC = game.Workspace.Map.NPCs:FindFirstChild(VNPC)
            if NPC and NPC:FindFirstChild("HumanoidRootPart") then
                table.insert(VPosition, {VNPC, NPC.HumanoidRootPart.CFrame})

                local PFPart = Instance.new("Part")
                PFPart.Name = "PF_" .. VNPC
                PFPart.Size = Vector3.new(20, 1, 20)
                PFPart.Anchored = true
                PFPart.Position = NPC.HumanoidRootPart.Position - Vector3.new(0, 11, 0)
                PFPart.Parent = game.Workspace
                table.insert(PF, PFPart)

                NPC.HumanoidRootPart.CFrame = PFPart.CFrame * CFrame.new(0, 2.5, -4) * CFrame.Angles(0, math.rad(180), 0)
            end
        end
    end
end

local function RPosition()
    if Incognito then
        for _, data in ipairs(VPosition) do
            local VNPC, PositionV = data[1], data[2]
            local NPC = game.Workspace.Map.NPCs:FindFirstChild(VNPC)
            if NPC and NPC:FindFirstChild("HumanoidRootPart") then
                NPC.HumanoidRootPart.CFrame = PositionV
            end
        end
        VPosition = {}
    end
end

local function TPrompt()
    local PurchasableFolder = game.Workspace.Map:FindFirstChild("Purchasable")
    if PurchasableFolder then
        for _, model in ipairs(PurchasableFolder:GetChildren()) do
            if model:IsA("Model") and model.Name == "Buzzkill" then
                local Handle = model:FindFirstChild("Handle")
                if Handle and Handle:IsA("BasePart") then
                    local PromptPurchase = Handle:FindFirstChild("PromptPurchase")
                    if PromptPurchase then
                        PromptPurchase.Enabled = not TPT
                    end
                end
            end
        end
    end
end

local function TPK()
    TPT = not TPT
    TPrompt()
    if TPT then
        if Incognito then
            ColliderS()
            From()
        end
        DeliveryConnection = game:GetService("RunService").Stepped:Connect(TP)
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Box Delivery",
            Text = "ENABLED",
            Icon = "rbxassetid://14928825735",
            Duration = 0.2
        })
    else
        if DeliveryConnection then
            DeliveryConnection:Disconnect()
            DeliveryConnection = nil
        end
        if Incognito then
            RPosition()
            RCollide()
        end
        local Character = game.Players.LocalPlayer.Character
        if Character and Character:FindFirstChild("HumanoidRootPart") then
            local BoxDelivery = game.Workspace.Map.NPCs:FindFirstChild("BoxDelivery")
            if BoxDelivery and BoxDelivery:FindFirstChild("HumanoidRootPart") then
                Character.HumanoidRootPart.CFrame = BoxDelivery.HumanoidRootPart.CFrame * CFrame.new(0, 0, -6)
            end
        end
        for _, PFPart in ipairs(PF) do
            if PFPart then
                PFPart:Destroy()
            end
        end
        PF = {}
        if Prompt then
            local Q = tick()
            while tick() - Q < 0.5 do
                Message()
                wait()
            end
        end        
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Box Delivery",
            Text = "DISABLED",
            Icon = "rbxassetid://912077237",
            Duration = 0.2
        })
    end
end

game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessedEvent)
    if not gameProcessedEvent and input.KeyCode.Name == Delivery then
        TPK()
    end
end)
